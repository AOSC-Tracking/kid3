* TO INSTALL
** Requirements

Qt, optional KDE, id3lib, TagLib, libogg, libvorbis, libvorbisfile, libFLAC++,
libFLAC, Chromaprint, mp4v2.

** Linux

*** Build KDE, Qt and CLI applications

cmake . -DCMAKE_BUILD_TYPE=RelWithDebInfo
make
make install

*** Customize build options

For a customized build, several build options are available. They can be set
with CMake variable definitions (-D OPTION=VAL, in the same way as
CMAKE_BUILD_TYPE in the example above).

CMAKE_BUILD_TYPE: Debug, Release, RelWithDebInfo or MinSizeRel
CMAKE_INSTALL_PREFIX: Installation directory, default is /usr/local
WITH_APPS: Which applications to build, possible values are Qt, CLI, KDE, Qml,
multiple values can be separated by semicolons, default is "Qt;CLI;KDE".
For example, to build only the Qt and CLI applications, set it to "Qt;CLI".

The following options are ON by default and can be set to OFF to disable a
feature:

BUILD_SHARED_LIBS: build with shared libraries
WITH_TAGLIB: build with TagLib
WITH_ID3LIB: build with id3lib
WITH_VORBIS: build with Ogg/Vorbis
WITH_FLAC: build with FLAC
WITH_CHROMAPRINT: build with Chromaprint
WITH_PHONON: build with Phonon
WITH_DBUS: build with D-Bus
WITH_READLINE: build with readline

The following options are OFF by default and can be set to ON to enable:

WITH_QT4: force use of Qt4
WITH_QT5: force use of Qt5
WITH_MP4V2: build with mp4v2
WITH_FFMPEG: force use of FFmpeg for Chromaprint decoding
WITH_CHROMAPRINT_FFMPEG: link FFmpeg only for Chromaprint FFT
WITH_GSTREAMER: force use of GStreamer for Chromaprint decoding
WITH_QAUDIODECODER: force use of QAudioDecoder for Chromaprint decoding
WITH_NO_MANCOMPRESS: disable compressed manpages

The install directory can be assigned to DESTDIR

*** Create Debian Packages

Make sure that you have installed all packages listed in deb/control,
section Build-Depends.

./build-deb.sh

*** Create RPM Package

Copy kid3.spec into the SPEC directory
and the tar.gz archive into the SOURCES directory.

rpmbuild -ba kid3.spec


** Windows

 - Install Qt/Windows Open Source Edition, CMake, MinGW and MSYS
 - Compile and install the libraries with MinGW and MSYS: id3lib, libvorbis,
   libogg, FLAC, TagLib using the script buildlibs.sh
 - Install xsltproc and an XSL stylesheet to transform Docbook to HTML
   (http://sourceforge.net/projects/docbook)
 - Point environment variables to the installed programs:
   * %PYTHONDIR%\python
   * %XSLTPROCDIR%\xsltproc
   * %DOCBOOKDIR%\html\docbook.xsl
   * %DUMPBINDIR%\dumpbin
   * %CMAKEDIR%\bin\cmake
 - start win32/buildkid3.bat to build and create a ZIP-file


** Mac OS X

 - Install Qt libraries for Mac, CMake and XCode
 - Compile and install the libraries id3lib, libvorbis,
   libogg, FLAC, TagLib using the script buildlibs.sh
 - Install xsltproc and an XSL stylesheet to transform Docbook to HTML
   (http://sourceforge.net/projects/docbook) in
   $HOME/docbook-xsl-1.72.0/html/docbook.xsl
 - start macosx/buildkid3.sh to build and create a dmg image
